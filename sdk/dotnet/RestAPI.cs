// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Apigateway
{
    [ApigatewayResourceType("apigateway:index:RestAPI")]
    public partial class RestAPI : Pulumi.ComponentResource
    {
        [Output("restAPI")]
        public Output<Pulumi.Aws.ApiGateway.RestApi> RestAPI { get; private set; } = null!;

        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a RestAPI resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RestAPI(string name, RestAPIArgs args, ComponentResourceOptions? options = null)
            : base("apigateway:index:RestAPI", name, args ?? new RestAPIArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class RestAPIArgs : Pulumi.ResourceArgs
    {
        [Input("routes", required: true)]
        private InputList<Inputs.EventHandlerRouteArgs>? _routes;
        public InputList<Inputs.EventHandlerRouteArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.EventHandlerRouteArgs>());
            set => _routes = value;
        }

        public RestAPIArgs()
        {
        }
    }
}
